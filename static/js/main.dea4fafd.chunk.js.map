{"version":3,"sources":["App.tsx","components/Header/index.tsx","constants/filters.ts","serviceWorker.ts","index.tsx"],"names":["FileStatus","Header","react_default","a","createElement","className","href","target","filters","Brooklyn","sepia","contrast","brightness","hueRotate","LoFi","grayscale","invert","LoFi-2","saturate","Moon","Silver","defaultFilters","blur","opacity","dropOffX","dropOffY","dropBlurRad","dropColor","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","reader","onImgChange","e","files","handleFile","onDragEnter","preventDefault","setState","dragStatus","DRAG_ENTER","onDragOver","onDragLeave","state","imgUrl","NULL","dropImage","dataTransfer","readAsDataURL","updateValue","val","title","objectSpread","defineProperty","reloadFile","resetFilters","selectedExample","setExampleFilter","i","value","handleUpdate","handleUpdateDropColor","color","hex","FileReader","onload","String","result","_this$state","_this$state$filters","filter","concat","join","build_react_dat_gui_default","data","onUpdate","build_react_dat_gui","path","label","min","max","step","closed","style","position","right","top","lib","onChangeComplete","components_Header_Header","Fragment","src","onClick","htmlFor","onDrop","labelText","id","type","accept","onChange","keys","map","key","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dea4fafd.chunk.js","sourcesContent":["import React, { ChangeEvent, Component, DragEvent } from 'react'\nimport './App.scss'\nimport { Header } from './components/Header'\nimport { Filters, filters } from './constants/filters'\nimport { ChromePicker, ColorResult } from 'react-color'\nimport 'react-dat-gui/build/react-dat-gui.css'\nimport DatGui, { DatNumber, DatFolder, DatString } from 'react-dat-gui'\n\nenum FileStatus {\n  DRAG_ENTER,\n  NULL,\n}\n\ninterface State {\n  imgUrl: string\n  dragStatus: FileStatus\n  selectedExample: string\n  filters: Filters\n}\n\nconst defaultFilters: Filters = {\n  grayscale: '0',\n  blur: '0',\n  sepia: '0',\n  saturate: '1',\n  hueRotate: '0',\n  invert: '0',\n  opacity: '1',\n  brightness: '1',\n  contrast: '1',\n  dropOffX: '0',\n  dropOffY: '0',\n  dropBlurRad: '0',\n  dropColor: '#000',\n}\n\nclass App extends Component<{}, State> {\n  reader: FileReader\n  constructor(props: {}) {\n    super(props)\n    this.state = {\n      imgUrl: '',\n      dragStatus: FileStatus.NULL,\n      selectedExample: '',\n      filters: {\n        ...defaultFilters,\n      },\n    }\n    this.reader = new FileReader()\n    this.reader.onload = () => {\n      this.setState({\n        imgUrl: String(this.reader.result),\n      })\n    }\n  }\n\n  onImgChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const files: FileList | null = e.target.files\n    this.handleFile(files)\n  }\n\n  onDragEnter = (e: DragEvent<HTMLLabelElement>): void => {\n    e.preventDefault()\n    this.setState({ dragStatus: FileStatus.DRAG_ENTER })\n  }\n\n  onDragOver = (e: DragEvent<HTMLLabelElement>): void => {\n    e.preventDefault()\n  }\n\n  onDragLeave = () => {\n    !this.state.imgUrl && this.setState({ dragStatus: FileStatus.NULL })\n  }\n\n  dropImage = (e: DragEvent<HTMLLabelElement>): void => {\n    e.preventDefault()\n    const files: FileList | null = e.dataTransfer.files\n    this.handleFile(files)\n  }\n\n  handleFile = (files: FileList | null): void => {\n    files && this.reader!.readAsDataURL(files[0])\n  }\n\n  updateValue = (val: string, title: string) => {\n    this.setState(state => ({ ...state, [title]: val }))\n  }\n\n  reloadFile = () => {\n    this.setState({\n      imgUrl: '',\n      dragStatus: FileStatus.NULL,\n    })\n  }\n\n  resetFilters = () => {\n    this.setState({\n      selectedExample: '',\n      filters: {\n        ...defaultFilters,\n      },\n    })\n  }\n\n  setExampleFilter = (i: ChangeEvent<HTMLSelectElement>): void => {\n    this.setState({\n      selectedExample: i.target.value,\n      filters: {\n        ...defaultFilters,\n        ...filters[i.target.value],\n      },\n    })\n  }\n\n  get labelText(): string {\n    switch (this.state.dragStatus) {\n      case FileStatus.DRAG_ENTER:\n        return 'Drop to load image!'\n      case FileStatus.NULL:\n      default:\n        return 'Drop or click to load image!'\n    }\n  }\n\n  handleUpdate = (filters: any) => this.setState({ filters })\n  handleUpdateDropColor = (color: ColorResult) => {\n    this.setState(state => ({ ...state, filters: { ...state.filters, dropColor: color.hex } }))\n  }\n\n  render() {\n    const {\n      imgUrl,\n      filters,\n      filters: {\n        grayscale,\n        blur,\n        sepia,\n        saturate,\n        invert,\n        opacity,\n        brightness,\n        contrast,\n        hueRotate,\n        dropOffX,\n        dropOffY,\n        dropBlurRad,\n        dropColor,\n      },\n      dragStatus,\n      selectedExample,\n    } = this.state\n\n    const filter = [\n      `grayscale(${grayscale})`,\n      `blur(${blur}px)`,\n      `sepia(${sepia})`,\n      `saturate(${saturate})`,\n      `hue-rotate(${hueRotate}deg)`,\n      `invert(${invert})`,\n      `opacity(${opacity})`,\n      `brightness(${brightness})`,\n      `contrast(${contrast})`,\n      `drop-shadow(${dropOffX}px ${dropOffY}px ${dropBlurRad}px ${dropColor})`,\n    ].join(' ')\n    return (\n      <div className=\"App\">\n        <DatGui data={filters} onUpdate={this.handleUpdate}>\n          <DatNumber path=\"grayscale\" label=\"grayscale\" min={0} max={1} step={0.1} />\n          <DatNumber path=\"blur\" label=\"blur\" min={0} max={10} step={0.1} />\n          <DatNumber path=\"sepia\" label=\"sepia\" min={0} max={1} step={0.1} />\n          <DatNumber path=\"saturate\" label=\"saturate\" min={0} max={1} step={0.1} />\n          <DatNumber path=\"hueRotate\" label=\"hue-rotate\" min={0} max={360} step={1} />\n          <DatNumber path=\"invert\" label=\"invert\" min={0} max={1} step={0.1} />\n          <DatNumber path=\"opacity\" label=\"opacity\" min={0} max={1} step={0.1} />\n          <DatNumber path=\"brightness\" label=\"brightness\" min={0} max={1} step={0.1} />\n          <DatNumber path=\"contrast\" label=\"contrast\" min={0} max={1} step={0.1} />\n          <DatFolder title=\"drop-shadow\" closed={false}>\n            <DatNumber path=\"dropOffX\" label=\"x\" min={0} max={100} step={1} />\n            <DatNumber path=\"dropOffY\" label=\"y\" min={0} max={100} step={1} />\n            <DatNumber path=\"dropBlurRad\" label=\"radius\" min={0} max={10} step={0.1} />\n            <DatString path=\"dropColor\" label=\"color\" />\n          </DatFolder>\n        </DatGui>\n        <div style={{ position: 'fixed', right: 16, top: 388 }}>\n          <ChromePicker\n            color={this.state.filters.dropColor}\n            onChangeComplete={this.handleUpdateDropColor}\n          />\n        </div>\n        <Header />\n        {imgUrl ? (\n          <>\n            <img src={imgUrl} style={{ filter }} />\n            <br />\n            <div className=\"btn-row\">\n              <button onClick={this.reloadFile}>Reload Image</button>\n              <button onClick={this.resetFilters}>Reset Filters</button>\n            </div>\n          </>\n        ) : (\n          <label\n            htmlFor=\"upload-file\"\n            onDragEnter={this.onDragEnter}\n            onDragOver={e => e.preventDefault()}\n            onDragLeave={this.onDragLeave}\n            onDrop={this.dropImage}\n          >\n            <div className={`label-${dragStatus}`}>{this.labelText}</div>\n          </label>\n        )}\n\n        <input\n          id=\"upload-file\"\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={this.onImgChange}\n          className=\"hidden\"\n        />\n\n        <div className=\"filters-container\">\n          <div>\n            <h2>Examples</h2>\n            <select onChange={this.setExampleFilter} value={selectedExample}>\n              <option value={''}>Default</option>\n              {Object.keys(filters).map(i => (\n                <option value={i} key={i}>\n                  {i}\n                </option>\n              ))}\n            </select>\n            <code>filter: {filter};</code>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React, { FC } from 'react'\nimport './Header.scss'\n\nexport const Header: FC = () => {\n  return (\n    <div className=\"header\">\n      <h1>Try Filter</h1>\n      <br />\n      <a href=\"https://github.com/Cygra/easy-filter\" target=\"_blank\">\n        on Github\n      </a>\n    </div>\n  )\n}\n","export interface Filters {\n  grayscale?: string\n  blur?: string\n  sepia?: string\n  saturate?: string\n  hueRotate?: string\n  invert?: string\n  opacity?: string\n  brightness?: string\n  contrast?: string\n  dropOffX?: string\n  dropOffY?: string\n  dropBlurRad?: string\n  dropColor?: string\n}\n\nexport const filters: { [k: string]: Filters } = {\n  Brooklyn: {\n    sepia: '0.25',\n    contrast: '1.25',\n    brightness: '1.25',\n    hueRotate: '5',\n  },\n  LoFi: {\n    brightness: '1.5',\n    contrast: '0.99',\n    grayscale: '0.6',\n    invert: '0.23',\n    sepia: '0.20',\n  },\n  'LoFi-2': {\n    saturate: '1.1',\n    contrast: '1.5',\n  },\n  Moon: {\n    brightness: '1.4',\n    contrast: '0.95',\n    saturate: '0',\n    sepia: '0.35',\n  },\n  Silver: {\n    saturate: '0',\n    invert: '0.2',\n    brightness: '1.9',\n    contrast: '1.6',\n  },\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}