{"version":3,"sources":["App.tsx","components/Header/index.tsx","serviceWorker.ts","index.tsx"],"names":["FileStatus","Header","react_default","a","createElement","className","href","target","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","reader","onImgChange","e","files","handleFile","onDragEnter","preventDefault","setState","dragStatus","DRAG_ENTER","onDragOver","onDragLeave","state","imgUrl","NULL","dropImage","dataTransfer","readAsDataURL","updateValue","val","title","objectSpread","defineProperty","reloadFile","grayscale","blur","sepia","saturate","hueRotate","invert","opacity","brightness","contrast","dropOffX","dropOffY","dropBlurRad","dropColor","FileReader","onload","String","result","_this2","_this$state","filter","concat","Number","join","components_Header_Header","Fragment","onClick","src","style","htmlFor","onDrop","labelText","id","type","accept","onChange","value","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e7fb3abf.chunk.js","sourcesContent":["import React, { Component, ChangeEvent, DragEvent } from 'react';\nimport './App.scss';\nimport { Header } from './components/Header'\n\ninterface Props {\n\n}\n\nenum FileStatus {\n  DRAG_ENTER,\n  NULL,\n}\n\ninterface State {\n  imgUrl: string;\n  grayscale: string;\n  blur: string;\n  sepia: string;\n  saturate: string;\n  hueRotate: string;\n  invert: string;\n  opacity: string;\n  brightness: string;\n  contrast: string;\n  dropOffX: string;\n  dropOffY: string;\n  dropBlurRad: string;\n  dropColor: string;\n  dragStatus: FileStatus;\n}\n\nclass App extends Component<Props, State> {\n  reader: FileReader;\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      imgUrl: '',\n      grayscale: '0',\n      blur: '0',\n      sepia: '0',\n      saturate: '100',\n      hueRotate: '0',\n      invert: '0',\n      opacity: '100',\n      brightness: '100',\n      contrast: '100',\n      dropOffX: '0',\n      dropOffY: '0',\n      dropBlurRad: '0',\n      dropColor: '000',\n      dragStatus: FileStatus.NULL,\n    };\n    this.reader = new FileReader();\n    this.reader.onload = () => this.setState({\n      imgUrl: String(this.reader.result),\n    });\n  }\n\n  onImgChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const files: FileList | null = e.target.files;\n    this.handleFile(files);\n  }\n\n  onDragEnter = (e: DragEvent<HTMLLabelElement>): void => {\n    e.preventDefault();\n    this.setState({ dragStatus: FileStatus.DRAG_ENTER });\n  }\n\n  onDragOver = (e: DragEvent<HTMLLabelElement>): void => {\n    e.preventDefault();\n  }\n\n  onDragLeave = () => {\n    !this.state.imgUrl && this.setState({ dragStatus: FileStatus.NULL });\n  }\n\n  dropImage = (e: DragEvent<HTMLLabelElement>): void => {\n    e.preventDefault();\n    const files: FileList | null = e.dataTransfer.files;\n    this.handleFile(files);\n  }\n\n  handleFile = (files: FileList | null): void => {\n    files && this.reader!.readAsDataURL(files[0]);\n  }\n\n  updateValue = (val: string, title: string) => {\n    this.setState(state => ({ ...state, [title]: val }))\n  }\n\n  reloadFile = () => {\n    this.setState({\n      imgUrl: '',\n      dragStatus: FileStatus.NULL,\n    })\n  }\n\n  get labelText(): string {\n    switch (this.state.dragStatus) {\n      case FileStatus.DRAG_ENTER:\n        return 'Drop to load file!';\n      case FileStatus.NULL:\n      default:\n        return 'Drop or click to load file!';\n    }\n  }\n\n  render() {\n    const {\n      imgUrl,\n      grayscale,\n      blur,\n      sepia,\n      saturate,\n      invert,\n      opacity,\n      brightness,\n      contrast,\n      hueRotate,\n      dropOffX,\n      dropOffY,\n      dropBlurRad,\n      dropColor,\n      dragStatus,\n    } = this.state;\n\n    const filter = [\n      `grayscale(${Number(grayscale)}%)`,\n      `blur(${Number(blur)}px)`,\n      `sepia(${Number(sepia)}%)`,\n      `saturate(${Number(saturate)}%)`,\n      `hue-rotate(${Number(hueRotate)}deg)`,\n      `invert(${Number(invert)}%)`,\n      `opacity(${Number(opacity)}%)`,\n      `brightness(${Number(brightness)}%)`,\n      `contrast(${Number(contrast)}%)`,\n      `drop-shadow(${Number(dropOffX)}px ${Number(dropOffY)}px ${Number(dropBlurRad)}px #${dropColor})`,\n    ].join(' ')\n    return (\n      <div className=\"App\">\n        <Header />\n        {imgUrl ? (\n          <>\n            <button onClick={this.reloadFile}>Reload File</button>\n            <img src={imgUrl} style={{ filter }} /><br />\n          </>\n        ) : (\n          <label\n            htmlFor=\"upload-file\"\n            onDragEnter={this.onDragEnter}\n            onDragOver={e => e.preventDefault()}\n            onDragLeave={this.onDragLeave}\n            onDrop={this.dropImage}>\n            <div className={`label-${dragStatus}`}>\n              {this.labelText}\n            </div>\n          </label>\n        )}\n\n        <input\n          id=\"upload-file\"\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={this.onImgChange}\n          className=\"hidden\"\n        />\n        <div>\n          <h3>grayscale</h3>\n          <input\n            type='number'\n            onChange={e => this.setState({ grayscale: e.target.value })}\n            value={grayscale}\n          />\n          &nbsp;%<br />\n\n          <h3>blur</h3>\n          <input\n            type='number'\n            onChange={e => this.setState({ blur: e.target.value })}\n            value={blur}\n          />\n          &nbsp;px<br />\n\n          <h3>sepia</h3>\n          <input\n            type='number'\n            onChange={e => this.setState({ sepia: e.target.value })}\n            value={sepia}\n          />\n          &nbsp;%<br />\n\n          <h3>saturate</h3>\n          <input\n            type='number'\n            onChange={e => this.setState({ saturate: e.target.value })}\n            value={saturate}\n          />\n          &nbsp;%<br />\n\n          <h3>hue-rotate</h3>\n          <input\n            type='number'\n            onChange={e => this.setState({ hueRotate: e.target.value })}\n            value={hueRotate}\n          />\n          &nbsp;deg<br />\n\n          <h3>invert</h3>\n          <input\n            type='number'\n            onChange={e => this.setState({ invert: e.target.value })}\n            value={invert}\n          />\n          &nbsp;%<br />\n\n          <h3>opacity</h3>\n          <input\n            type='number'\n            onChange={e => this.setState({ opacity: e.target.value })}\n            value={opacity}\n          />\n          &nbsp;%<br />\n\n          <h3>brightness</h3>\n          <input\n            type='number'\n            onChange={e => this.setState({ brightness: e.target.value })}\n            value={brightness}\n          />\n          &nbsp;%<br />\n\n          <h3>contrast</h3>\n          <input\n            type='number'\n            onChange={e => this.setState({ contrast: e.target.value })}\n            value={contrast}\n          />\n          &nbsp;%<br />\n\n          <h3>drop-shadow</h3><br />\n          <span>offset-X</span>\n          <input\n            type='number'\n            onChange={e => this.setState({ dropOffX: e.target.value })}\n            value={dropOffX}\n          />\n          &nbsp;px<br />\n\n          <span>offset-Y</span>\n          <input\n            type='number'\n            onChange={e => this.setState({ dropOffY: e.target.value })}\n            value={dropOffY}\n          />\n          &nbsp;px<br />\n\n          <span>blur-radius</span>\n          <input\n            type='number'\n            onChange={e => this.setState({ dropBlurRad: e.target.value })}\n            value={dropBlurRad}\n          />\n          &nbsp;px<br />\n\n          <span>color</span>\n          #&nbsp;\n          <input\n            type='text'\n            onChange={e => this.setState({ dropColor: e.target.value })}\n            value={dropColor}\n            id='color-input'\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { FC } from 'react';\nimport './Header.scss'\n\nexport const Header: FC = () => {\n  return (\n    <div className='header'>\n      <h1>Try Filter</h1>&nbsp;\n      <a href='https://github.com/Cygra/easy-filter' target='_blank'>on Github</a>\n    </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}