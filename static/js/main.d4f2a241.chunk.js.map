{"version":3,"sources":["App.tsx","components/Header/index.tsx","constants/filters.ts","serviceWorker.ts","index.tsx"],"names":["FileStatus","Header","react_default","a","createElement","className","href","target","filters","Brooklyn","sepia","contrast","brightness","hueRotate","LoFi","grayscale","invert","LoFi-2","saturate","Moon","Silver","defaultFilters","blur","opacity","dropOffX","dropOffY","dropBlurRad","dropColor","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","reader","onImgChange","e","files","handleFile","onDragEnter","preventDefault","setState","dragStatus","DRAG_ENTER","onDragOver","onDragLeave","state","imgUrl","NULL","dropImage","dataTransfer","readAsDataURL","updateValue","val","title","objectSpread","defineProperty","reloadFile","resetFilters","selectedExample","setExampleFilter","i","value","FileReader","onload","String","result","_this2","_this$state","filter","concat","Number","join","components_Header_Header","Fragment","src","style","onClick","htmlFor","onDrop","labelText","id","type","accept","onChange","keys","map","key","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d4f2a241.chunk.js","sourcesContent":["import React, { ChangeEvent, Component, DragEvent } from 'react'\nimport './App.scss'\nimport { Header } from './components/Header'\nimport { Filters, filters } from './constants/filters'\n\nenum FileStatus {\n  DRAG_ENTER,\n  NULL,\n}\n\ninterface State {\n  imgUrl: string\n  dragStatus: FileStatus\n  selectedExample: string\n}\n\nconst defaultFilters: Filters = {\n  grayscale: '0',\n  blur: '0',\n  sepia: '0',\n  saturate: '1',\n  hueRotate: '0',\n  invert: '0',\n  opacity: '1',\n  brightness: '1',\n  contrast: '1',\n  dropOffX: '0',\n  dropOffY: '0',\n  dropBlurRad: '0',\n  dropColor: '000',\n}\n\nclass App extends Component<{}, State & Filters> {\n  reader: FileReader\n  constructor(props: {}) {\n    super(props)\n    this.state = {\n      imgUrl: '',\n      dragStatus: FileStatus.NULL,\n      selectedExample: '',\n      ...defaultFilters,\n    }\n    this.reader = new FileReader()\n    this.reader.onload = () => {\n      this.setState({\n        imgUrl: String(this.reader.result),\n      })\n    }\n  }\n\n  onImgChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const files: FileList | null = e.target.files\n    this.handleFile(files)\n  }\n\n  onDragEnter = (e: DragEvent<HTMLLabelElement>): void => {\n    e.preventDefault()\n    this.setState({ dragStatus: FileStatus.DRAG_ENTER })\n  }\n\n  onDragOver = (e: DragEvent<HTMLLabelElement>): void => {\n    e.preventDefault()\n  }\n\n  onDragLeave = () => {\n    !this.state.imgUrl && this.setState({ dragStatus: FileStatus.NULL })\n  }\n\n  dropImage = (e: DragEvent<HTMLLabelElement>): void => {\n    e.preventDefault()\n    const files: FileList | null = e.dataTransfer.files\n    this.handleFile(files)\n  }\n\n  handleFile = (files: FileList | null): void => {\n    files && this.reader!.readAsDataURL(files[0])\n  }\n\n  updateValue = (val: string, title: string) => {\n    this.setState(state => ({ ...state, [title]: val }))\n  }\n\n  reloadFile = () => {\n    this.setState({\n      imgUrl: '',\n      dragStatus: FileStatus.NULL,\n    })\n  }\n\n  resetFilters = () => {\n    this.setState({\n      selectedExample: '',\n      ...defaultFilters,\n    })\n  }\n\n  setExampleFilter = (i: ChangeEvent<HTMLSelectElement>): void => {\n    this.setState({\n      selectedExample: i.target.value,\n      ...defaultFilters,\n      ...filters[i.target.value],\n    })\n  }\n\n  get labelText(): string {\n    switch (this.state.dragStatus) {\n      case FileStatus.DRAG_ENTER:\n        return 'Drop to load image!'\n      case FileStatus.NULL:\n      default:\n        return 'Drop or click to load image!'\n    }\n  }\n\n  render() {\n    const {\n      imgUrl,\n      grayscale,\n      blur,\n      sepia,\n      saturate,\n      invert,\n      opacity,\n      brightness,\n      contrast,\n      hueRotate,\n      dropOffX,\n      dropOffY,\n      dropBlurRad,\n      dropColor,\n      dragStatus,\n      selectedExample,\n    } = this.state\n\n    const filter = [\n      `grayscale(${Number(grayscale)})`,\n      `blur(${Number(blur)}px)`,\n      `sepia(${Number(sepia)})`,\n      `saturate(${Number(saturate)})`,\n      `hue-rotate(${Number(hueRotate)}deg)`,\n      `invert(${Number(invert)})`,\n      `opacity(${Number(opacity)})`,\n      `brightness(${Number(brightness)})`,\n      `contrast(${Number(contrast)})`,\n      `drop-shadow(${Number(dropOffX)}px ${Number(dropOffY)}px ${Number(\n        dropBlurRad\n      )}px #${dropColor})`,\n    ].join(' ')\n    return (\n      <div className=\"App\">\n        <Header />\n        {imgUrl ? (\n          <>\n            <img src={imgUrl} style={{ filter }} />\n            <br />\n            <div className=\"btn-row\">\n              <button onClick={this.reloadFile}>Reload Image</button>\n              <button onClick={this.resetFilters}>Reset Filters</button>\n            </div>\n          </>\n        ) : (\n          <label\n            htmlFor=\"upload-file\"\n            onDragEnter={this.onDragEnter}\n            onDragOver={e => e.preventDefault()}\n            onDragLeave={this.onDragLeave}\n            onDrop={this.dropImage}\n          >\n            <div className={`label-${dragStatus}`}>{this.labelText}</div>\n          </label>\n        )}\n\n        <input\n          id=\"upload-file\"\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={this.onImgChange}\n          className=\"hidden\"\n        />\n        <div>\n          <h3>grayscale</h3>\n          <input\n            type=\"number\"\n            onChange={e => this.setState({ grayscale: e.target.value })}\n            value={grayscale}\n          />\n          &nbsp;\n          <br />\n          <h3>blur</h3>\n          <input\n            type=\"number\"\n            onChange={e => this.setState({ blur: e.target.value })}\n            value={blur}\n          />\n          &nbsp;px\n          <br />\n          <h3>sepia</h3>\n          <input\n            type=\"number\"\n            onChange={e => this.setState({ sepia: e.target.value })}\n            value={sepia}\n          />\n          &nbsp;\n          <br />\n          <h3>saturate</h3>\n          <input\n            type=\"number\"\n            onChange={e => this.setState({ saturate: e.target.value })}\n            value={saturate}\n          />\n          &nbsp;\n          <br />\n          <h3>hue-rotate</h3>\n          <input\n            type=\"number\"\n            onChange={e => this.setState({ hueRotate: e.target.value })}\n            value={hueRotate}\n          />\n          &nbsp;deg\n          <br />\n          <h3>invert</h3>\n          <input\n            type=\"number\"\n            onChange={e => this.setState({ invert: e.target.value })}\n            value={invert}\n          />\n          &nbsp;\n          <br />\n          <h3>opacity</h3>\n          <input\n            type=\"number\"\n            onChange={e => this.setState({ opacity: e.target.value })}\n            value={opacity}\n          />\n          &nbsp;\n          <br />\n          <h3>brightness</h3>\n          <input\n            type=\"number\"\n            onChange={e => this.setState({ brightness: e.target.value })}\n            value={brightness}\n          />\n          &nbsp;\n          <br />\n          <h3>contrast</h3>\n          <input\n            type=\"number\"\n            onChange={e => this.setState({ contrast: e.target.value })}\n            value={contrast}\n          />\n          &nbsp;\n          <br />\n          <h3>drop-shadow</h3>\n          <br />\n          <span>offset-X</span>\n          <input\n            type=\"number\"\n            onChange={e => this.setState({ dropOffX: e.target.value })}\n            value={dropOffX}\n          />\n          &nbsp;px\n          <br />\n          <span>offset-Y</span>\n          <input\n            type=\"number\"\n            onChange={e => this.setState({ dropOffY: e.target.value })}\n            value={dropOffY}\n          />\n          &nbsp;px\n          <br />\n          <span>blur-radius</span>\n          <input\n            type=\"number\"\n            onChange={e => this.setState({ dropBlurRad: e.target.value })}\n            value={dropBlurRad}\n          />\n          &nbsp;px\n          <br />\n          <span>color</span>\n          #&nbsp;\n          <input\n            type=\"text\"\n            onChange={e => this.setState({ dropColor: e.target.value })}\n            value={dropColor}\n            id=\"color-input\"\n          />\n        </div>\n        <div>\n          <h2>Examples</h2>\n          <select onChange={this.setExampleFilter} value={selectedExample}>\n            <option value={''}>Default</option>\n            {Object.keys(filters).map(i => (\n              <option value={i} key={i}>\n                {i}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React, { FC } from 'react'\nimport './Header.scss'\n\nexport const Header: FC = () => {\n  return (\n    <div className=\"header\">\n      <h1>Try Filter</h1>\n      <br />\n      <a href=\"https://github.com/Cygra/easy-filter\" target=\"_blank\">\n        on Github\n      </a>\n    </div>\n  )\n}\n","export interface Filters {\n  grayscale?: string\n  blur?: string\n  sepia?: string\n  saturate?: string\n  hueRotate?: string\n  invert?: string\n  opacity?: string\n  brightness?: string\n  contrast?: string\n  dropOffX?: string\n  dropOffY?: string\n  dropBlurRad?: string\n  dropColor?: string\n}\n\nexport const filters: { [k: string]: Filters } = {\n  Brooklyn: {\n    sepia: '0.25',\n    contrast: '1.25',\n    brightness: '1.25',\n    hueRotate: '5',\n  },\n  LoFi: {\n    brightness: '1.5',\n    contrast: '0.99',\n    grayscale: '0.6',\n    invert: '0.23',\n    sepia: '0.20',\n  },\n  'LoFi-2': {\n    saturate: '1.1',\n    contrast: '1.5',\n  },\n  Moon: {\n    brightness: '1.4',\n    contrast: '0.95',\n    saturate: '0',\n    sepia: '0.35',\n  },\n  Silver: {\n    saturate: '0',\n    invert: '0.2',\n    brightness: '1.9',\n    contrast: '1.6',\n  },\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}